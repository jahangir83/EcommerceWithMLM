import { MigrationInterface, QueryRunner } from "typeorm";

export class Init1755705410739 implements MigrationInterface {
    name = 'Init1755705410739'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "public"."profiles_gender_enum" AS ENUM('male', 'female', 'other')`);
        await queryRunner.query(`CREATE TYPE "public"."profiles_maritalstatus_enum" AS ENUM('single', 'married', 'divorced')`);
        await queryRunner.query(`CREATE TABLE "profiles" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "fatherName" character varying, "motherName" character varying, "birthDate" date, "gender" "public"."profiles_gender_enum", "religion" character varying, "maritalStatus" "public"."profiles_maritalstatus_enum", "nationalId" character varying, "geoLocation" character varying, "division" character varying, "district" character varying, "upazila" character varying, "union" character varying, "village" character varying, "postOffice" character varying, "road" character varying, "houseNo" character varying, "postalCode" character varying, "extraInfo" jsonb, "nidFront" character varying NOT NULL, "nidBack" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "userId" uuid, CONSTRAINT "REL_315ecd98bd1a42dcf2ec4e2e98" UNIQUE ("userId"), CONSTRAINT "PK_8e520eb4da7dc01d0e190447c8e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "journal_entries" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "debit" numeric(18,2) NOT NULL DEFAULT '0', "credit" numeric(18,2) NOT NULL DEFAULT '0', "currency" character varying(10) NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "transactionId" uuid, "accountId" uuid NOT NULL, CONSTRAINT "PK_a70368e64230434457c8d007ab3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."transactions_valuetype_enum" AS ENUM('money', 'points')`);
        await queryRunner.query(`CREATE TYPE "public"."transactions_direction_enum" AS ENUM('inflow', 'outflow')`);
        await queryRunner.query(`CREATE TYPE "public"."transactions_status_enum" AS ENUM('PENDING', 'COMPLETED', 'FAILED', 'CANCELLED')`);
        await queryRunner.query(`CREATE TABLE "transactions" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "type" character varying NOT NULL, "valueType" "public"."transactions_valuetype_enum" NOT NULL, "amount" numeric(18,2) NOT NULL, "currency" character varying(10) NOT NULL, "direction" "public"."transactions_direction_enum" NOT NULL, "relatedService" character varying, "relatedEntityId" character varying, "metadata" jsonb, "status" "public"."transactions_status_enum" NOT NULL DEFAULT 'PENDING', "oldBalance" numeric(18,2), "newBalance" numeric(18,2), "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "userId" uuid, "walletId" uuid, CONSTRAINT "PK_a219afd8dd77ed80f5a862f1db9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."wallets_wallettype_enum" AS ENUM('MONEY', 'POINTS', 'COMMISSION')`);
        await queryRunner.query(`CREATE TABLE "wallets" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "balance" numeric(18,2) NOT NULL DEFAULT '0', "walletType" "public"."wallets_wallettype_enum" NOT NULL DEFAULT 'MONEY', "currency" character varying DEFAULT 'BDT', "isActive" boolean NOT NULL DEFAULT true, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "userId" uuid, CONSTRAINT "UQ_4700f196f10b7ee7332dfda10b6" UNIQUE ("userId", "walletType"), CONSTRAINT "PK_8402e5df5a30a229380e83e4f7e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "withdrawals" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "amount" numeric(18,2) NOT NULL, "currency" character varying(10) NOT NULL, "status" character varying NOT NULL DEFAULT 'pending', "method" character varying, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "userId" uuid, CONSTRAINT "PK_9871ec481baa7755f8bd8b7c7e9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."subscription_servicestatus_enum" AS ENUM('advanced_access_user', 'advanced_uddokta', 'advanced_associate')`);
        await queryRunner.query(`CREATE TABLE "subscription" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "price" character varying NOT NULL, "serviceName" character varying NOT NULL, "type" character varying NOT NULL, "serviceStatus" "public"."subscription_servicestatus_enum" NOT NULL DEFAULT 'advanced_access_user', "image" character varying, "isActive" boolean NOT NULL DEFAULT true, "description" character varying, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_8c3e00ebd02103caa1174cd5d9d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."course_servicestatus_enum" AS ENUM('advanced_access_user', 'advanced_uddokta', 'advanced_associate')`);
        await queryRunner.query(`CREATE TABLE "course" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "price" character varying NOT NULL, "serviceName" character varying NOT NULL, "type" character varying NOT NULL, "serviceStatus" "public"."course_servicestatus_enum" NOT NULL DEFAULT 'advanced_associate', "description" character varying, "image" character varying, "isActive" boolean NOT NULL DEFAULT true, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_bf95180dd756fd204fb01ce4916" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."uddokta_servicestatus_enum" AS ENUM('advanced_access_user', 'advanced_uddokta', 'advanced_associate')`);
        await queryRunner.query(`CREATE TABLE "uddokta" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "price" numeric(10,2) NOT NULL, "serviceName" character varying NOT NULL, "type" character varying NOT NULL, "serviceStatus" "public"."uddokta_servicestatus_enum" NOT NULL DEFAULT 'advanced_uddokta', "description" character varying, "image" character varying, "isActive" boolean NOT NULL DEFAULT true, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_a49ddd2ef34f782d7b99c68cc3c" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "order_items" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "productName" character varying NOT NULL, "quantity" integer NOT NULL, "unitPrice" numeric(10,2) NOT NULL, "totalPrice" numeric(10,2) NOT NULL, "productSnapshot" jsonb, "orderId" uuid, "productId" uuid, CONSTRAINT "PK_005269d8574e6fac0493715c308" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."orders_status_enum" AS ENUM('pending_payment', 'paid', 'processing', 'shipped', 'delivered', 'completed', 'cancelled', 'refunded')`);
        await queryRunner.query(`CREATE TYPE "public"."orders_paymentmethod_enum" AS ENUM('cod', 'card', 'mobile_banking', 'bkash', 'nagad', 'rocket', 'wallet')`);
        await queryRunner.query(`CREATE TABLE "orders" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "orderNumber" character varying NOT NULL, "status" "public"."orders_status_enum" NOT NULL DEFAULT 'pending_payment', "subtotalAmount" numeric(10,2) NOT NULL DEFAULT '0', "shippingAmount" numeric(10,2) NOT NULL DEFAULT '0', "taxAmount" numeric(10,2) NOT NULL DEFAULT '0', "discountAmount" numeric(10,2) NOT NULL DEFAULT '0', "totalAmount" numeric(10,2) NOT NULL DEFAULT '0', "paymentMethod" "public"."orders_paymentmethod_enum", "shippingAddress" jsonb, "billingAddress" jsonb, "notes" text, "trackingNumber" character varying, "couponCode" character varying, "metadata" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "userId" uuid, CONSTRAINT "UQ_59b0c3b34ea0fa5562342f24143" UNIQUE ("orderNumber"), CONSTRAINT "PK_710e2d4957aa5878dfe94e4ac2f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."payment_status_enum" AS ENUM('pending', 'processing', 'success', 'failed', 'cancelled', 'refunded', 'captured')`);
        await queryRunner.query(`CREATE TABLE "payment" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "status" "public"."payment_status_enum" NOT NULL DEFAULT 'pending', "amount" integer NOT NULL, "method" character varying, "currency" character varying(10) NOT NULL, "gatewayReference" character varying, "gatewayResponse" json, "metadata" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "orderId" uuid NOT NULL, "userId" uuid, CONSTRAINT "PK_fcaec7df5adf9cac408c686b2ab" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."verify_type_enum" AS ENUM('EMAIL', 'PHONE', 'OTP', 'REFERRAL', 'PASSWORD_RESET')`);
        await queryRunner.query(`CREATE TABLE "verify" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "type" "public"."verify_type_enum" NOT NULL, "value" character varying NOT NULL, "code" character varying NOT NULL, "expiresAt" TIMESTAMP WITH TIME ZONE, "isUsed" boolean NOT NULL DEFAULT false, "userId" character varying, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "verificationsId" uuid, CONSTRAINT "PK_c554da021aecbe3860c4b631be5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_ec4125def1dc80757577c516bc" ON "verify" ("value") `);
        await queryRunner.query(`CREATE TYPE "public"."users_role_enum" AS ENUM('ADMIN', 'USER', 'VENDOR', 'DEVELOPER')`);
        await queryRunner.query(`CREATE TYPE "public"."users_status_enum" AS ENUM('advanced_access_user', 'advanced_uddokta', 'advanced_associate')`);
        await queryRunner.query(`CREATE TABLE "users" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "username" character varying NOT NULL, "email" character varying, "phone" character varying NOT NULL, "password" character varying NOT NULL, "role" "public"."users_role_enum" NOT NULL DEFAULT 'USER', "avatar" character varying, "referralCode" character varying, "referredById" uuid, "generation" integer NOT NULL DEFAULT '0', "leadershipId" integer NOT NULL DEFAULT '0', "designation" character varying NOT NULL DEFAULT '', "totalDirectReferrals" integer NOT NULL DEFAULT '0', "isActive" boolean NOT NULL DEFAULT false, "status" "public"."users_status_enum", "isPhoneVerified" boolean NOT NULL DEFAULT false, "isEmailVerified" boolean NOT NULL DEFAULT false, "isReferralCodeUsed" boolean NOT NULL DEFAULT false, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "courseId" uuid, "uddoktaId" uuid, "subscriptionId" uuid, CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email"), CONSTRAINT "UQ_a000cca60bcf04454e727699490" UNIQUE ("phone"), CONSTRAINT "UQ_b7f8278f4e89249bb75c9a15899" UNIQUE ("referralCode"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_a3ffb1c0c8416b9fc6f907b743" ON "users" ("id") `);
        await queryRunner.query(`CREATE TABLE "account_balances" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "balance" numeric(18,2) NOT NULL DEFAULT '0', "currency" character varying(10) NOT NULL, "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "accountId" uuid, CONSTRAINT "PK_919c1ceca951a4fd7b93532a3b1" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "leader_ship_disignation" ("id" integer NOT NULL, "name" character varying(100) NOT NULL, "description" character varying(255), "target" jsonb, "targetContent" text, "award" character varying(100) NOT NULL, "isActive" boolean NOT NULL DEFAULT true, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_f689b59faed37e37ecd99bd626a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "categories" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "description" text, "slug" character varying, "image" character varying, "icon" character varying, "sortOrder" integer NOT NULL DEFAULT '0', "isActive" boolean NOT NULL DEFAULT true, "seoData" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "parentId" uuid, CONSTRAINT "PK_24dbc6126a28ff948da33e97d3b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."products_type_enum" AS ENUM('physical', 'digital', 'service')`);
        await queryRunner.query(`CREATE TYPE "public"."products_status_enum" AS ENUM('active', 'inactive', 'out_of_stock', 'discontinued')`);
        await queryRunner.query(`CREATE TABLE "products" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "description" text, "shortDescription" text, "price" numeric(10,2) NOT NULL, "salePrice" numeric(10,2) NOT NULL DEFAULT '0', "stock" integer NOT NULL DEFAULT '0', "type" "public"."products_type_enum" NOT NULL DEFAULT 'physical', "status" "public"."products_status_enum" NOT NULL DEFAULT 'active', "sku" character varying, "images" text, "specifications" jsonb, "seoData" jsonb, "weight" numeric(3,2) NOT NULL DEFAULT '0', "dimensions" jsonb, "isFeatured" boolean NOT NULL DEFAULT false, "isActive" boolean NOT NULL DEFAULT true, "viewCount" integer NOT NULL DEFAULT '0', "salesCount" integer NOT NULL DEFAULT '0', "rating" numeric(3,2) NOT NULL DEFAULT '0', "reviewCount" integer NOT NULL DEFAULT '0', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "categoryId" uuid, "vendorId" uuid, CONSTRAINT "PK_0806c755e0aca124e67c0cf6d7d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."shipment_status_enum" AS ENUM('queued', 'packed', 'in_transit', 'out_for_delivery', 'delivered', 'cancelled')`);
        await queryRunner.query(`CREATE TABLE "shipment" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "status" "public"."shipment_status_enum" NOT NULL DEFAULT 'queued', "courier" character varying, "trackingNumber" character varying, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "orderId" uuid NOT NULL, CONSTRAINT "PK_f51f635db95c534ca206bf7a0a4" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "revenue_share" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "level" integer NOT NULL, "amount" integer NOT NULL, "isPaid" boolean NOT NULL DEFAULT false, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "receiverId" uuid NOT NULL, "orderItemId" uuid NOT NULL, CONSTRAINT "PK_6ef7c4be56b9290db1462885163" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "profiles" ADD CONSTRAINT "FK_315ecd98bd1a42dcf2ec4e2e985" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "journal_entries" ADD CONSTRAINT "FK_fda8ee3d4422b40f412c7bb72f0" FOREIGN KEY ("transactionId") REFERENCES "transactions"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "journal_entries" ADD CONSTRAINT "FK_d789c02ca2db598dca36bb5929f" FOREIGN KEY ("accountId") REFERENCES "wallets"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "transactions" ADD CONSTRAINT "FK_6bb58f2b6e30cb51a6504599f41" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "transactions" ADD CONSTRAINT "FK_a88f466d39796d3081cf96e1b66" FOREIGN KEY ("walletId") REFERENCES "wallets"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "wallets" ADD CONSTRAINT "FK_2ecdb33f23e9a6fc392025c0b97" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "withdrawals" ADD CONSTRAINT "FK_79a3949e02a4652fb2b2a0ccd4e" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order_items" ADD CONSTRAINT "FK_f1d359a55923bb45b057fbdab0d" FOREIGN KEY ("orderId") REFERENCES "orders"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order_items" ADD CONSTRAINT "FK_cdb99c05982d5191ac8465ac010" FOREIGN KEY ("productId") REFERENCES "products"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "orders" ADD CONSTRAINT "FK_151b79a83ba240b0cb31b2302d1" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment" ADD CONSTRAINT "FK_d09d285fe1645cd2f0db811e293" FOREIGN KEY ("orderId") REFERENCES "orders"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment" ADD CONSTRAINT "FK_b046318e0b341a7f72110b75857" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "verify" ADD CONSTRAINT "FK_dff99f407ea4f4f3bb43a5d30c0" FOREIGN KEY ("verificationsId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "FK_1142607b5a447cd5ce23ef7798f" FOREIGN KEY ("referredById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "FK_3148e7834f4910fcc0ffa9ac9ed" FOREIGN KEY ("courseId") REFERENCES "course"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "FK_72f6e9d6311c257b46009ec7e2c" FOREIGN KEY ("uddoktaId") REFERENCES "uddokta"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "FK_07f4c2455fc50d34b0b39d67a01" FOREIGN KEY ("subscriptionId") REFERENCES "subscription"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_balances" ADD CONSTRAINT "FK_efa4993dae6944b4781ee0c6560" FOREIGN KEY ("accountId") REFERENCES "wallets"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "categories" ADD CONSTRAINT "FK_9a6f051e66982b5f0318981bcaa" FOREIGN KEY ("parentId") REFERENCES "categories"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "products" ADD CONSTRAINT "FK_ff56834e735fa78a15d0cf21926" FOREIGN KEY ("categoryId") REFERENCES "categories"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "products" ADD CONSTRAINT "FK_6b00af9e9c38a1673f594de74f4" FOREIGN KEY ("vendorId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "shipment" ADD CONSTRAINT "FK_93ba0beada3eb709bc83dc0b9af" FOREIGN KEY ("orderId") REFERENCES "orders"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "revenue_share" ADD CONSTRAINT "FK_b452d7a0dc23cbf6f6e6b5ccb2e" FOREIGN KEY ("receiverId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "revenue_share" ADD CONSTRAINT "FK_d956d885067be9c5965cfcb6110" FOREIGN KEY ("orderItemId") REFERENCES "order_items"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "revenue_share" DROP CONSTRAINT "FK_d956d885067be9c5965cfcb6110"`);
        await queryRunner.query(`ALTER TABLE "revenue_share" DROP CONSTRAINT "FK_b452d7a0dc23cbf6f6e6b5ccb2e"`);
        await queryRunner.query(`ALTER TABLE "shipment" DROP CONSTRAINT "FK_93ba0beada3eb709bc83dc0b9af"`);
        await queryRunner.query(`ALTER TABLE "products" DROP CONSTRAINT "FK_6b00af9e9c38a1673f594de74f4"`);
        await queryRunner.query(`ALTER TABLE "products" DROP CONSTRAINT "FK_ff56834e735fa78a15d0cf21926"`);
        await queryRunner.query(`ALTER TABLE "categories" DROP CONSTRAINT "FK_9a6f051e66982b5f0318981bcaa"`);
        await queryRunner.query(`ALTER TABLE "account_balances" DROP CONSTRAINT "FK_efa4993dae6944b4781ee0c6560"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "FK_07f4c2455fc50d34b0b39d67a01"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "FK_72f6e9d6311c257b46009ec7e2c"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "FK_3148e7834f4910fcc0ffa9ac9ed"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "FK_1142607b5a447cd5ce23ef7798f"`);
        await queryRunner.query(`ALTER TABLE "verify" DROP CONSTRAINT "FK_dff99f407ea4f4f3bb43a5d30c0"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP CONSTRAINT "FK_b046318e0b341a7f72110b75857"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP CONSTRAINT "FK_d09d285fe1645cd2f0db811e293"`);
        await queryRunner.query(`ALTER TABLE "orders" DROP CONSTRAINT "FK_151b79a83ba240b0cb31b2302d1"`);
        await queryRunner.query(`ALTER TABLE "order_items" DROP CONSTRAINT "FK_cdb99c05982d5191ac8465ac010"`);
        await queryRunner.query(`ALTER TABLE "order_items" DROP CONSTRAINT "FK_f1d359a55923bb45b057fbdab0d"`);
        await queryRunner.query(`ALTER TABLE "withdrawals" DROP CONSTRAINT "FK_79a3949e02a4652fb2b2a0ccd4e"`);
        await queryRunner.query(`ALTER TABLE "wallets" DROP CONSTRAINT "FK_2ecdb33f23e9a6fc392025c0b97"`);
        await queryRunner.query(`ALTER TABLE "transactions" DROP CONSTRAINT "FK_a88f466d39796d3081cf96e1b66"`);
        await queryRunner.query(`ALTER TABLE "transactions" DROP CONSTRAINT "FK_6bb58f2b6e30cb51a6504599f41"`);
        await queryRunner.query(`ALTER TABLE "journal_entries" DROP CONSTRAINT "FK_d789c02ca2db598dca36bb5929f"`);
        await queryRunner.query(`ALTER TABLE "journal_entries" DROP CONSTRAINT "FK_fda8ee3d4422b40f412c7bb72f0"`);
        await queryRunner.query(`ALTER TABLE "profiles" DROP CONSTRAINT "FK_315ecd98bd1a42dcf2ec4e2e985"`);
        await queryRunner.query(`DROP TABLE "revenue_share"`);
        await queryRunner.query(`DROP TABLE "shipment"`);
        await queryRunner.query(`DROP TYPE "public"."shipment_status_enum"`);
        await queryRunner.query(`DROP TABLE "products"`);
        await queryRunner.query(`DROP TYPE "public"."products_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."products_type_enum"`);
        await queryRunner.query(`DROP TABLE "categories"`);
        await queryRunner.query(`DROP TABLE "leader_ship_disignation"`);
        await queryRunner.query(`DROP TABLE "account_balances"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a3ffb1c0c8416b9fc6f907b743"`);
        await queryRunner.query(`DROP TABLE "users"`);
        await queryRunner.query(`DROP TYPE "public"."users_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."users_role_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ec4125def1dc80757577c516bc"`);
        await queryRunner.query(`DROP TABLE "verify"`);
        await queryRunner.query(`DROP TYPE "public"."verify_type_enum"`);
        await queryRunner.query(`DROP TABLE "payment"`);
        await queryRunner.query(`DROP TYPE "public"."payment_status_enum"`);
        await queryRunner.query(`DROP TABLE "orders"`);
        await queryRunner.query(`DROP TYPE "public"."orders_paymentmethod_enum"`);
        await queryRunner.query(`DROP TYPE "public"."orders_status_enum"`);
        await queryRunner.query(`DROP TABLE "order_items"`);
        await queryRunner.query(`DROP TABLE "uddokta"`);
        await queryRunner.query(`DROP TYPE "public"."uddokta_servicestatus_enum"`);
        await queryRunner.query(`DROP TABLE "course"`);
        await queryRunner.query(`DROP TYPE "public"."course_servicestatus_enum"`);
        await queryRunner.query(`DROP TABLE "subscription"`);
        await queryRunner.query(`DROP TYPE "public"."subscription_servicestatus_enum"`);
        await queryRunner.query(`DROP TABLE "withdrawals"`);
        await queryRunner.query(`DROP TABLE "wallets"`);
        await queryRunner.query(`DROP TYPE "public"."wallets_wallettype_enum"`);
        await queryRunner.query(`DROP TABLE "transactions"`);
        await queryRunner.query(`DROP TYPE "public"."transactions_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."transactions_direction_enum"`);
        await queryRunner.query(`DROP TYPE "public"."transactions_valuetype_enum"`);
        await queryRunner.query(`DROP TABLE "journal_entries"`);
        await queryRunner.query(`DROP TABLE "profiles"`);
        await queryRunner.query(`DROP TYPE "public"."profiles_maritalstatus_enum"`);
        await queryRunner.query(`DROP TYPE "public"."profiles_gender_enum"`);
    }

}
